name: Security Monitoring

on:
  schedule:
    # Run every day at 6 AM Yemen time (3 AM UTC)
    - cron: '0 3 * * *'
  workflow_dispatch:
  push:
    branches: [main, dev]
    paths:
      - 'requirements.txt'
      - 'pyproject.toml'

jobs:
  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install security tools
        run: |
          pip install safety bandit semgrep pip-audit

      - name: Run safety check
        run: |
          echo "Running safety check for known vulnerabilities..."
          safety check --file requirements.txt --output json --save-json safety-report.json || true
          if [ -f safety-report.json ]; then
            echo "Safety report:"
            cat safety-report.json
          fi

      - name: Run pip-audit
        run: |
          echo "Running pip-audit for additional vulnerability scanning..."
          pip-audit --requirement requirements.txt --format json --output pip-audit-report.json || true
          if [ -f pip-audit-report.json ]; then
            echo "Pip-audit report:"
            cat pip-audit-report.json
          fi

      - name: Run bandit security linter
        run: |
          echo "Running bandit for security issues in code..."
          bandit -r src/ -f json -o bandit-report.json || true
          if [ -f bandit-report.json ]; then
            echo "Bandit report:"
            cat bandit-report.json
          fi

      - name: Run semgrep security scan
        run: |
          echo "Running semgrep for additional security patterns..."
          semgrep --config=auto src/ --json --output semgrep-report.json || true
          if [ -f semgrep-report.json ]; then
            echo "Semgrep report:"
            cat semgrep-report.json
          fi

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            safety-report.json
            pip-audit-report.json
            bandit-report.json
            semgrep-report.json
          retention-days: 30

      - name: Create issue for critical vulnerabilities
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = `ðŸš¨ Security Vulnerabilities Detected - ${new Date().toISOString().split('T')[0]}`;
            const body = `
            ## Security Scan Results
            
            Our automated security monitoring has detected potential vulnerabilities in the project.
            
            **Scan Date:** ${new Date().toISOString()}
            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            ### Action Required
            - [ ] Review the security reports in the workflow artifacts
            - [ ] Update vulnerable dependencies
            - [ ] Verify fixes resolve the issues
            
            ### Reports Available
            - Safety check results
            - Pip-audit results  
            - Bandit code analysis
            - Semgrep security patterns
            
            **Note:** This issue was automatically created. Please review promptly.
            `;
            
            // Check if an issue already exists
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security,automated'
            });
            
            if (existingIssues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['security', 'automated', 'high-priority']
              });
            }

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          allow-licenses: MIT, Apache-2.0, BSD-3-Clause, ISC, LGPL-3.0-or-later, AGPL-3.0-or-later